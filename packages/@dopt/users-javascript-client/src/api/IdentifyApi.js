/**
 * Dopt Users API
 * The Dopt Users API
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import BadRequestErrorResponseBody from '../model/BadRequestErrorResponseBody';
import IdentifyBulkRequestBodyInner from '../model/IdentifyBulkRequestBodyInner';
import IdentifyBulkResponseBody from '../model/IdentifyBulkResponseBody';
import IdentifySegmentRequestBody from '../model/IdentifySegmentRequestBody';
import InternalServerErrorResponseBody from '../model/InternalServerErrorResponseBody';
import UnauthorizedErrorResponseBody from '../model/UnauthorizedErrorResponseBody';

/**
* Identify service.
* @module api/IdentifyApi
* @version 0.0.0
*/
export default class IdentifyApi {

    /**
    * Constructs a new IdentifyApi. 
    * @alias module:api/IdentifyApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the identify operation.
     * @callback module:api/IdentifyApi~identifyCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} identifier 
     * @param {Object} opts Optional parameters
     * @param {Object.<String, {String: Object}>} opts.requestBody 
     * @param {module:api/IdentifyApi~identifyCallback} callback The callback function, accepting three arguments: error, data, response
     */
    identify(identifier, opts, callback) {
      opts = opts || {};
      let postBody = opts['requestBody'];
      // verify the required parameter 'identifier' is set
      if (identifier === undefined || identifier === null) {
        throw new Error("Missing the required parameter 'identifier' when calling identify");
      }

      let pathParams = {
        'identifier': identifier
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['ApiKeyAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/identify/{identifier}', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the identifyBulk operation.
     * @callback module:api/IdentifyApi~identifyBulkCallback
     * @param {String} error Error message, if any.
     * @param {module:model/IdentifyBulkResponseBody} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Object} opts Optional parameters
     * @param {Array.<module:model/IdentifyBulkRequestBodyInner>} opts.identifyBulkRequestBodyInner 
     * @param {module:api/IdentifyApi~identifyBulkCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/IdentifyBulkResponseBody}
     */
    identifyBulk(opts, callback) {
      opts = opts || {};
      let postBody = opts['identifyBulkRequestBodyInner'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['ApiKeyAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = IdentifyBulkResponseBody;
      return this.apiClient.callApi(
        '/identify/bulk', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the identifySegment operation.
     * @callback module:api/IdentifyApi~identifySegmentCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Object} opts Optional parameters
     * @param {module:model/IdentifySegmentRequestBody} opts.identifySegmentRequestBody 
     * @param {module:api/IdentifyApi~identifySegmentCallback} callback The callback function, accepting three arguments: error, data, response
     */
    identifySegment(opts, callback) {
      opts = opts || {};
      let postBody = opts['identifySegmentRequestBody'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['ApiKeyAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/identify/segment', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
